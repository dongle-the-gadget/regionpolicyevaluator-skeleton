// Bindings generated by `windows-bindgen` 0.52.0

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]
pub mod Internal {
    pub mod System {
        pub mod Profile {
            #[doc(hidden)]
            #[repr(transparent)]
            #[derive(
                ::core::cmp::PartialEq, ::core::cmp::Eq, ::core::fmt::Debug, ::core::clone::Clone,
            )]
            pub struct IRegionPolicyEvaluatorStatics(::windows_core::IUnknown);
            unsafe impl ::windows_core::Interface for IRegionPolicyEvaluatorStatics {
                type Vtable = IRegionPolicyEvaluatorStatics_Vtbl;
            }
            unsafe impl ::windows_core::ComInterface for IRegionPolicyEvaluatorStatics {
                const IID: ::windows_core::GUID =
                    ::windows_core::GUID::from_u128(0x1ca20398_c1d9_5f12_b40a_6528206e3b5e);
            }
            #[repr(C)]
            #[doc(hidden)]
            pub struct IRegionPolicyEvaluatorStatics_Vtbl {
                pub base__: ::windows_core::IInspectable_Vtbl,
                pub EvaluatePolicyState: unsafe extern "system" fn(
                    this: *mut ::core::ffi::c_void,
                    policy: ::windows_core::GUID,
                    result__: *mut PolicyState,
                )
                    -> ::windows_core::HRESULT,
                pub ForceEvaluatePolicyState: unsafe extern "system" fn(
                    this: *mut ::core::ffi::c_void,
                    policy: ::windows_core::GUID,
                    result__: *mut PolicyState,
                )
                    -> ::windows_core::HRESULT,
            }
            pub struct RegionPolicyEvaluator;
            impl RegionPolicyEvaluator {
                pub fn EvaluatePolicyState(
                    policy: ::windows_core::GUID,
                ) -> ::windows_core::Result<PolicyState> {
                    Self::IRegionPolicyEvaluatorStatics(|this| unsafe {
                        let mut result__ = ::std::mem::zeroed();
                        (::windows_core::Interface::vtable(this).EvaluatePolicyState)(
                            ::windows_core::Interface::as_raw(this),
                            policy,
                            &mut result__,
                        )
                        .from_abi(result__)
                    })
                }
                pub fn ForceEvaluatePolicyState(
                    policy: ::windows_core::GUID,
                ) -> ::windows_core::Result<PolicyState> {
                    Self::IRegionPolicyEvaluatorStatics(|this| unsafe {
                        let mut result__ = ::std::mem::zeroed();
                        (::windows_core::Interface::vtable(this).ForceEvaluatePolicyState)(
                            ::windows_core::Interface::as_raw(this),
                            policy,
                            &mut result__,
                        )
                        .from_abi(result__)
                    })
                }
                #[doc(hidden)]
                pub fn IRegionPolicyEvaluatorStatics<
                    R,
                    F: FnOnce(&IRegionPolicyEvaluatorStatics) -> ::windows_core::Result<R>,
                >(
                    callback: F,
                ) -> ::windows_core::Result<R> {
                    static SHARED: ::windows_core::imp::FactoryCache<
                        RegionPolicyEvaluator,
                        IRegionPolicyEvaluatorStatics,
                    > = ::windows_core::imp::FactoryCache::new();
                    SHARED.call(callback)
                }
            }
            impl ::windows_core::RuntimeName for RegionPolicyEvaluator {
                const NAME: &'static str = "Windows.Internal.System.Profile.RegionPolicyEvaluator";
            }
            #[repr(transparent)]
            #[derive(::core::cmp::PartialEq, ::core::cmp::Eq)]
            pub struct PolicyState(pub i32);
            impl PolicyState {
                pub const Unknown: Self = Self(0i32);
                pub const Enabled: Self = Self(1i32);
                pub const Disabled: Self = Self(2i32);
            }
            impl ::core::marker::Copy for PolicyState {}
            impl ::core::clone::Clone for PolicyState {
                fn clone(&self) -> Self {
                    *self
                }
            }
            impl ::core::default::Default for PolicyState {
                fn default() -> Self {
                    Self(0)
                }
            }
            impl ::windows_core::TypeKind for PolicyState {
                type TypeKind = ::windows_core::CopyType;
            }
            impl ::core::fmt::Debug for PolicyState {
                fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
                    f.debug_tuple("PolicyState").field(&self.0).finish()
                }
            }
            impl ::windows_core::RuntimeType for PolicyState {
                const SIGNATURE: ::windows_core::imp::ConstBuffer =
                    ::windows_core::imp::ConstBuffer::from_slice(
                        b"enum(Windows.Internal.System.Profile.PolicyState;i4)",
                    );
            }
            pub trait IRegionPolicyEvaluatorStatics_Impl: Sized {
                fn EvaluatePolicyState(
                    &self,
                    policy: &::windows_core::GUID,
                ) -> ::windows_core::Result<PolicyState>;
                fn ForceEvaluatePolicyState(
                    &self,
                    policy: &::windows_core::GUID,
                ) -> ::windows_core::Result<PolicyState>;
            }
            impl ::windows_core::RuntimeName for IRegionPolicyEvaluatorStatics {
                const NAME: &'static str =
                    "Windows.Internal.System.Profile.IRegionPolicyEvaluatorStatics";
            }
            impl IRegionPolicyEvaluatorStatics_Vtbl {
                pub const fn new<
                    Identity: ::windows_core::IUnknownImpl<Impl = Impl>,
                    Impl: IRegionPolicyEvaluatorStatics_Impl,
                    const OFFSET: isize,
                >() -> IRegionPolicyEvaluatorStatics_Vtbl {
                    unsafe extern "system" fn EvaluatePolicyState<
                        Identity: ::windows_core::IUnknownImpl<Impl = Impl>,
                        Impl: IRegionPolicyEvaluatorStatics_Impl,
                        const OFFSET: isize,
                    >(
                        this: *mut ::core::ffi::c_void,
                        policy: ::windows_core::GUID,
                        result__: *mut PolicyState,
                    ) -> ::windows_core::HRESULT {
                        let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                        let this = (*this).get_impl();
                        match this.EvaluatePolicyState(::core::mem::transmute(&policy)) {
                            ::core::result::Result::Ok(ok__) => {
                                ::core::ptr::write(result__, ::core::mem::transmute_copy(&ok__));
                                ::windows_core::HRESULT(0)
                            }
                            ::core::result::Result::Err(err) => err.into(),
                        }
                    }
                    unsafe extern "system" fn ForceEvaluatePolicyState<
                        Identity: ::windows_core::IUnknownImpl<Impl = Impl>,
                        Impl: IRegionPolicyEvaluatorStatics_Impl,
                        const OFFSET: isize,
                    >(
                        this: *mut ::core::ffi::c_void,
                        policy: ::windows_core::GUID,
                        result__: *mut PolicyState,
                    ) -> ::windows_core::HRESULT {
                        let this = (this as *const *const ()).offset(OFFSET) as *const Identity;
                        let this = (*this).get_impl();
                        match this.ForceEvaluatePolicyState(::core::mem::transmute(&policy)) {
                            ::core::result::Result::Ok(ok__) => {
                                ::core::ptr::write(result__, ::core::mem::transmute_copy(&ok__));
                                ::windows_core::HRESULT(0)
                            }
                            ::core::result::Result::Err(err) => err.into(),
                        }
                    }
                    Self {
                        base__: ::windows_core::IInspectable_Vtbl::new::<
                            Identity,
                            IRegionPolicyEvaluatorStatics,
                            OFFSET,
                        >(),
                        EvaluatePolicyState: EvaluatePolicyState::<Identity, Impl, OFFSET>,
                        ForceEvaluatePolicyState: ForceEvaluatePolicyState::<Identity, Impl, OFFSET>,
                    }
                }
                pub unsafe fn matches(iid: *const ::windows_core::GUID) -> bool {
                    *iid == <IRegionPolicyEvaluatorStatics as ::windows_core::ComInterface>::IID
                }
            }
        }
    }
}
